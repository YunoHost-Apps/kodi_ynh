#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..."

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? launch_on_boot=$(ynh_app_setting_get --app=$app --key=launch_on_boot)
#REMOVEME? open_webserver_port=$(ynh_app_setting_get --app=$app --key=open_webserver_port)
#REMOVEME? port=$(ynh_app_setting_get --app=$app --key=port)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

# Fix launch_on_boot as a boolean value
if [ "$launch_on_boot" = "Yes" ]; then
	ynh_app_setting_set --app=$app --key=launch_on_boot --value=1
	launch_on_boot=1
elif [ "$launch_on_boot" = "No" ]; then
	ynh_app_setting_set --app=$app --key=launch_on_boot --value=0
	launch_on_boot=0
fi

# Fix launch_on_boot as a boolean value
if [ "$open_webserver_port" = "Yes" ]; then
#REMOVEME? 	ynh_app_setting_set --app=$app --key=open_webserver_port --value=1
	open_webserver_port=1
elif [ "$open_webserver_port" = "No" ]; then
#REMOVEME? 	ynh_app_setting_set --app=$app --key=open_webserver_port --value=0
	open_webserver_port=0
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..."

tmpdir=$(mktemp -d)
ynh_setup_source --dest_dir="$tmpdir" --source_id="deb-multimedia-keyring"
dpkg -i "$tmpdir/deb-multimedia-keyring.deb"

if [ ${PACKAGE_CHECK_EXEC:-0} -eq 1 ]; then
#REMOVEME? 	pkg_dependencies="$pkg_dependencies $package_check_dependencies"
fi

if [[ $YNH_ARCH != arm*  ]]; then
#REMOVEME? 	ynh_install_app_dependencies $pkg_dependencies
else
#REMOVEME? 	ynh_install_app_dependencies $arm_pkg_dependencies
fi

if [ ${PACKAGE_CHECK_EXEC:-0} -eq 1 ]; then
	cp ../conf/xorg.conf /etc/X11/xorg.conf
fi

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Securing files and directories..."

# Set permissions on app files
chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:$app "$install_dir"
usermod -a -G cdrom,audio,video,plugdev,users,dialout,dip,input,netdev "$app"

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description="media center" --log="$install_dir/.kodi/temp/kodi.log" --needs_exposed_ports=$port

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action="start"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..."

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
